---------------------
CONTENTS:

0 INTRODUCTION
1 INSTALLATION
2 USAGE
  2.1 ATTRIBUTES
  2.2 FILE HANDLING
  2.3 CONFIGURATION
  2.3.1 EXAMPLE CONFIGURATION
3 STRUCTURE

---------------------

0 INTRODUCTION

attrfs is a file system designed for organizing files into multiple categories, either by setting extended attributes or moving/copying files into "attribute folders".
For examples, see 2 USAGE.

---------------------

1 INSTALLATION

This app depends on the fuserl application. Make sure you have it installed before trying to run this.

I haven't written any installer yet, but this is one way to do it:
* Congigure the attrfs.app or the ~/.attrfsrc file to your taste. IMPORTANT: Unless you change what directories to mirror, you won't be able to start the app!
* start an erl shell with the attrfs dir in the ERL_LIBS path
* compile with make:all(). 
* run by doing application:start(fuserl). followed by application:start(attrfs).

---------------------

2 USAGE

2.1 ATTRIBUTES

Read the man page of attr/xattr, or your favorite extended attributes manager program, for a full list of attribute handling commands that are available.
The attribute key can contain a separator (default: "/"), to signify a multi level attribute.
The attribute value can contain a separator (default: ","), to signify setting multiple values at once.
These separators can be changed in the app file. See CONFIGURATION

Examples:

% attr -s "etaoin/shrdlu" -V "yo" real/all/file
Attribute "etaoin/shrdlu" set to a 2 byte value for real/all/file:
yo
% ls attributes/etaoin/shrdlu/yo/
file

$ attr -s "foo" -V "bar,baz" files/all/fil
Attribute "foo" set to a 7 byte value for files/all/fil:
bar,baz
$ ls -R attributes/foo/*
attributes/foo/bar:
fil

attributes/foo/baz:
fil


2.2 FILE HANDLING
Copying/moving files:
% mkdir -p attribute_part/foo/bar
% mv real_part/file attribute_part/foo/bar
% ls real_part/file
   file
% ls attribute_part/foo/bar
   file
% attr -g foo real_part/file
   bar

2.3 CONFIGURATION
Configuration is done either by editing ~/.attrfsrc. 
Options and values are separated by the first colon present on a line
And any line that begins with a % is taken as a comment and is not parsed.

These are the different options currently configurable

Paths: (IMPORTANT: YOU HAVE TO SET ALL OF THESE IN ORDER TO RUN attrfs!)
  to dir 
    Where to put the file system.
  from dir 
    accumulative. Use one "from dir:" directive for each dir to be included.
  attributes db 
    Contains the path (string) to the file you want to use as the attribute database.

Directory names:
  The "real" part of the file system:
      real name (default: "real")
        The name for the part of the file system containing "real" files.

      all name (default: "all")
        The name for the directory under real that contains all files included for categorizing.
      dup name (default: "duplicates")
        The name of the directory with files that tell which files have duplicate representation in the dirs specified by "from dir"
  The "attributes" part of the file system:
    attr name (default: "attributes")
        The name for the part of the file system containing "attribute" files and directories.
    logic name (default: "logic")
        The name for the filtering part of the file system.
    and name (default: "AND")
        The name for directories such as logic/Foo/AND/Bar, for ∩ filtering
    or name (default: "OR")
        The name for directories such as logic/Foo/OR/Bar, for ∪ filtering
    butnot name (default: "BUTNOT")
        The name for directories such as logic/Foo/BUTNOT/Bar, for \ filtering

Fuserl specific
  linked in (default: true)
        Port related. Touch this only if you want to break everything.
  mount opts (default:  "allow_other,default_permissions")
        Port related. Touch this only if you want to break everything.

2.3.1 EXAMPLE CONFIGURATION

% example ~/.attrfs
from dir: first/dir/to/mirror
from dir: /second/dir/to/mirror
to dir: ~/my/attribute/fs
attributes db: ~/.attribs_db
real name: categorize_me
logic name: search_me
attr name: categorize_here



---------------------

3 STRUCTURE

For information on the structure of the files included in this app, see the STRUCTURE document.
