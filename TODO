
Make it possible to copy files between folders. (Which will mostly be the same as changing attributes for files.)

Make the app terminate when fusermount -u mountdir

include support for 
    ☑ mkdir, 
    ☑ rmdir, 
    ☑ rename 
    ☐ and others? to change attributes.


Detect duplicates in the folder(s) to copy? 
  note as folders under /duplicates
  /duplicates/foo.file/paths.txt or something like it.
    
    
include support for reading files!

make closedir do something useful.

☑ Include support for "multi-valued attributes":
    % attr -s "Foo" -V "Etaoin,Shrdlu" Baz.file
    =>
    % ls attribs/Foo -R
    Etaoin/Baz.file
    Shrdlu/Baz.file
  Setting multi-valued arguments now fixed.
  Getting multi-valued arguments fixed.

☐ Include support for "deep attributes":
    % attr -s "Foo/Bar" -V "Etaoin" Baz.file
    =>
    % ls attribs/Foo/Bar/Etaoin -R
    Baz.file

    % attr -s "Bla" -V "" Baz
    =>
    % ls attribs/Bla
    Baz

☐ Add support for value-less key-value attribute pairs? makes attribs/Foo/file possible.
    % attr -s "Foo" -V "" Bar.file
    =>
    % ls attribs/Foo 
    Bar.file


☐ Include support for setting multiple attributes at once:
    % attr -s "Foo,Bar" -V "Etaoin" Baz.file
    =>
    % ls attribs -R
    Foo/Etaoin/Baz.file
    Bar/Etaoin/Baz.file

☐ The above combined:
    % attr -s "Foo/Bar" -V "Etaoin,Shrdlu" Baz.file
    =>
    % ls attribs/Foo/Bar -R
    Etaoin/Baz.file
    Shrdlu/Baz.file

☐ Include support for search directories:
    ☐ Special directories AND, OR, NOT, AND<key folder> , AND NOT <key folder> etc for every value folder.
        
        % ls attribs/Foo/Bar
            Etaoin
            Shrdlu
            AND
            ...
        % ls attribs/Foo/Baz
            Blah
            Shrdlu
            AND
            ...
        % ls attribs/Foo/Baz/AND/Foo/Bar
            Shrdlu
            AND
            ...

    ☐ A new root directory tree for "search dirs" with special syntax:
        ☐ (Foo:Bar & Foo:Baz) | (Etaoin:(Shrdlu & Foo)|Blah:*)
        ☐ Regex?


☐ make setxattr unset old attribute value folders when adding new ones.

☐ make the dir functions context sensitive.
    different users shown different context, different users have different rights...
☐ make all applicable functions context sensitive.

☐ check if the OS tries to copy a file unto itself (from a real dir to an attribute dir). 
  This copying is to be "ignored", that is, regarded as a rename operation, which is the same as hard linking, also for dirs. Touching or movin the file should be regarded as the same as copying in this FS.



Apparently, linux calls open before calling setattr. What to do with open?

have different attribute folders for different users? different groups? different users or group according to mode?

☐ Use CTX as an index for accessing attributes?

To do later on:

☐ Add support for moving real files in the real file system by moving files in the real part of the file system. Change names of database entries simultaneously.
